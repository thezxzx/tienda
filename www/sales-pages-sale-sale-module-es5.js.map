{"version":3,"sources":["webpack:///src/app/sales/pipes/product-filter.pipe.ts","webpack:///src/app/sales/pages/sale/sale-routing.module.ts","webpack:///src/app/sales/pages/sale/sale.page.scss","webpack:///src/app/sales/pages/sale/sale.page.ts","webpack:///src/app/sales/pages/sale/sale.page.html","webpack:///src/app/sales/services/sale.service.ts","webpack:///src/app/sales/pages/sale/sale.module.ts"],"names":["ProductFilterPipe","allProducts","searchProduct","toLowerCase","filter","item","name","includes","routes","path","component","SalePageRoutingModule","imports","forChild","exports","SalePage","menu","saleService","productsService","search","getAllProducts","subscribe","products","swipeGesture","enable","open","productName","detail","value","barCode","getProductByBarCode","selector","template","SaleService","product","console","log","providedIn","SalePageModule","declarations"],"mappings":"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","file":"sales-pages-sale-sale-module-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Products } from 'src/app/products/interface/products-interface';\n\n@Pipe({\n  name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n\n  transform( allProducts: Products[], searchProduct: string ): any {\n    if ( searchProduct === '' ) {\n      return;\n    }\n    \n\n    searchProduct = searchProduct.toLowerCase();\n\n    return allProducts.filter( item => {\n      return item.name.toLowerCase().includes( searchProduct );\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SalePage } from './sale.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SalePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SalePageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYWxlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { SaleService } from '../../services/sale.service';\nimport { ProductsService } from '../../../products/services/products.service';\nimport { Products } from '../../../products/interface/products-interface';\n\n@Component({\n  selector: 'app-sale',\n  templateUrl: './sale.page.html',\n  styleUrls: ['./sale.page.scss'],\n})\nexport class SalePage implements OnInit {\n\n  search: string = '';\n  allProducts: Products[] = [];\n  constructor(\n    private menu: MenuController,\n    private saleService: SaleService,\n    private productsService: ProductsService\n  ) {\n    this.productsService.getAllProducts().subscribe( products => {\n      this.allProducts = products;\n    });\n  }\n\n  ngOnInit() {\n    // Evita que el menú se abra arrastrando\n    this.menu.swipeGesture( false, 'first');\n  }\n\n  // Abrir menú\n  onToggleMenu() {\n    this.menu.enable( true, 'first');\n    this.menu.open('first');\n  }\n\n  // Buscar producto por el buscador ( nombre )\n  onSearchProduct( productName: CustomEventInit ) {\n    this.search = productName.detail.value;\n  }\n\n  // Obtener producto por código de barra\n  getProductByBarCode( barCode: string ) {\n    this.saleService.getProductByBarCode( barCode );\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"onToggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">Ventas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- \\n  Campos a mostrar en la tabla\\n  * Codigo\\n  * nombre\\n  * cantidad\\n  * precio\\n -->\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"9\\\">\\n        <ion-grid>\\n          <ion-row> <!-- Encabezados -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\"><h6> Código </h6></ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\"><h6> Nombre </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Precio </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Cantidad </h6></ion-col>\\n          </ion-row> <!-- Fin de los encabezados-->\\n          <ion-row *ngFor=\\\"let product of [0, 1, 2]\\\"> <!-- Fila a repetir -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\n              <p>Código</p>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\n              <p>Nombre</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <p>Precio</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-input type=\\\"number\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"20\\\"></ion-input>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\">\\n              <ion-button color=\\\"danger\\\" (click)=\\\" getProductByBarCode( '123123123' ) \\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row> <!-- Fin de la fila a repetir-->\\n        </ion-grid>\\n      </ion-col> <!-- Fin de la columna de 9-->\\n      <ion-col size=\\\"3\\\"> <!-- Columna de la barra de búsqueda-->\\n        <ion-searchbar\\n          placeholder=\\\"buscar\\\"\\n          animated\\n          debounce=\\\"500\\\"\\n          (ionChange)=\\\"onSearchProduct( $event )\\\"\\n          >\\n        </ion-searchbar>\\n        <ion-list>\\n          <ion-item *ngFor=\\\"let product of allProducts | productFilter: search\\\">\\n            <ion-label>{{ product.name }}</ion-label>\\n          </ion-item>\\n        </ion-list>\\n          <!-- <ion-list *ngIf=\\\"isItemAvailable\\\">\\n            <ion-item *ngFor=\\\"let producto of productosFiltrados\\\"> {{ producto.nombre }} </ion-item>\\n          </ion-list> -->\\n          \\n      </ion-col> <!-- Fin de la columna de la barra de búsqueda-->\\n    </ion-row> <!-- Fin de la fila principal -->\\n  </ion-grid>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Products } from '../../products/interface/products-interface';\nimport { ProductsService } from '../../products/services/products.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaleService {\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  async getProductByBarCode( barCode: string ) {\n    const product = await this.productsService.getProductByBarCode( barCode );\n    console.log( product );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SalePageRoutingModule } from './sale-routing.module';\n\nimport { SalePage } from './sale.page';\nimport { ProductFilterPipe } from '../../pipes/product-filter.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SalePageRoutingModule\n  ],\n  declarations: [\n    SalePage,\n    ProductFilterPipe\n  ]\n})\nexport class SalePageModule {}\n"]}