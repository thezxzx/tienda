{"version":3,"sources":["./src/app/sales/pipes/product-filter.pipe.ts","./src/app/sales/pages/sale/sale-routing.module.ts","./src/app/sales/pages/sale/sale.page.scss","./src/app/sales/pages/sale/sale.page.ts","./src/app/sales/pages/sale/sale.page.html","./src/app/sales/services/sale.service.ts","./src/app/sales/pages/sale/sale.module.ts"],"names":[],"mappings":"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","file":"sales-pages-sale-sale-module-es2015.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Products } from 'src/app/products/interface/products-interface';\n\n@Pipe({\n  name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n\n  transform( allProducts: Products[], searchProduct: string ): any {\n    if ( searchProduct === '' ) {\n      return;\n    }\n    \n\n    searchProduct = searchProduct.toLowerCase();\n\n    return allProducts.filter( item => {\n      return item.name.toLowerCase().includes( searchProduct );\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SalePage } from './sale.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SalePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SalePageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYWxlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { SaleService } from '../../services/sale.service';\nimport { ProductsService } from '../../../products/services/products.service';\nimport { Products } from '../../../products/interface/products-interface';\n\n@Component({\n  selector: 'app-sale',\n  templateUrl: './sale.page.html',\n  styleUrls: ['./sale.page.scss'],\n})\nexport class SalePage implements OnInit {\n\n  search: string = '';\n  allProducts: Products[] = [];\n  constructor(\n    private menu: MenuController,\n    private saleService: SaleService,\n    private productsService: ProductsService\n  ) {\n    this.productsService.getAllProducts().subscribe( products => {\n      this.allProducts = products;\n    });\n  }\n\n  ngOnInit() {\n    // Evita que el menú se abra arrastrando\n    this.menu.swipeGesture( false, 'first');\n  }\n\n  // Abrir menú\n  onToggleMenu() {\n    this.menu.enable( true, 'first');\n    this.menu.open('first');\n  }\n\n  // Buscar producto por el buscador ( nombre )\n  onSearchProduct( productName: CustomEventInit ) {\n    this.search = productName.detail.value;\n  }\n\n  // Obtener producto por código de barra\n  getProductByBarCode( barCode: string ) {\n    this.saleService.getProductByBarCode( barCode );\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"onToggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">Ventas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- \\n  Campos a mostrar en la tabla\\n  * Codigo\\n  * nombre\\n  * cantidad\\n  * precio\\n -->\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"9\\\">\\n        <ion-grid>\\n          <ion-row> <!-- Encabezados -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\"><h6> Código </h6></ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\"><h6> Nombre </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Precio </h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6> Cantidad </h6></ion-col>\\n          </ion-row> <!-- Fin de los encabezados-->\\n          <ion-row *ngFor=\\\"let product of [0, 1, 2]\\\"> <!-- Fila a repetir -->\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\n              <p>Código</p>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\n              <p>Nombre</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <p>Precio</p>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-input type=\\\"number\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"20\\\"></ion-input>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\">\\n              <ion-button color=\\\"danger\\\" (click)=\\\" getProductByBarCode( '123123123' ) \\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row> <!-- Fin de la fila a repetir-->\\n        </ion-grid>\\n      </ion-col> <!-- Fin de la columna de 9-->\\n      <ion-col size=\\\"3\\\"> <!-- Columna de la barra de búsqueda-->\\n        <ion-searchbar\\n          placeholder=\\\"buscar\\\"\\n          animated\\n          debounce=\\\"500\\\"\\n          (ionChange)=\\\"onSearchProduct( $event )\\\"\\n          >\\n        </ion-searchbar>\\n        <ion-list>\\n          <ion-item *ngFor=\\\"let product of allProducts | productFilter: search\\\">\\n            <ion-label>{{ product.name }}</ion-label>\\n          </ion-item>\\n        </ion-list>\\n          <!-- <ion-list *ngIf=\\\"isItemAvailable\\\">\\n            <ion-item *ngFor=\\\"let producto of productosFiltrados\\\"> {{ producto.nombre }} </ion-item>\\n          </ion-list> -->\\n          \\n      </ion-col> <!-- Fin de la columna de la barra de búsqueda-->\\n    </ion-row> <!-- Fin de la fila principal -->\\n  </ion-grid>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Products } from '../../products/interface/products-interface';\nimport { ProductsService } from '../../products/services/products.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaleService {\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  async getProductByBarCode( barCode: string ) {\n    const product = await this.productsService.getProductByBarCode( barCode );\n    console.log( product );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SalePageRoutingModule } from './sale-routing.module';\n\nimport { SalePage } from './sale.page';\nimport { ProductFilterPipe } from '../../pipes/product-filter.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SalePageRoutingModule\n  ],\n  declarations: [\n    SalePage,\n    ProductFilterPipe\n  ]\n})\nexport class SalePageModule {}\n"],"sourceRoot":"webpack:///"}