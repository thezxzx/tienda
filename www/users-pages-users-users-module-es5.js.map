{"version":3,"sources":["webpack:///src/app/users/pages/users/users.page.html","webpack:///src/app/users/pages/users/users.module.ts","webpack:///src/app/users/pages/users/users.page.scss","webpack:///src/app/users/pages/users/users.page.ts","webpack:///src/app/users/pages/users/users-routing.module.ts","webpack:///src/app/users/services/user.service.ts"],"names":["UsersPageModule","imports","declarations","UsersPage","menu","formBuilder","userService","roles","name","allUsers","form","group","role","required","users","getAllUsers","subscribe","console","log","swipeGesture","user","updateUser","get","setValue","invalid","value","id","deleteUser","enable","open","selector","template","routes","path","component","UsersPageRoutingModule","forChild","exports","UserService","af","afa","usersCollection","collection","snapshotChanges","pipe","actions","map","a","data","payload","doc","err","update","signOut","providedIn"],"mappings":"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","file":"users-pages-users-users-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"onToggleMenu()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\">\\n      Usuarios\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"8\\\">\\n        <ion-grid>\\n          <ion-row> <!-- Encabezados -->\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Nombre</h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Apellido</h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Tel√©fono</h6></ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\"><h6>Rol</h6></ion-col>\\n          </ion-row> <!-- Fin de los encabezados-->\\n          <ion-row *ngFor=\\\"let user of allUsers\\\"> <!-- Fila a repetir -->\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ user.name | titlecase }}</ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ user.lastName | titlecase }}</ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ user.phone }}</ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">{{ user.role }}</ion-col>\\n            <ion-col size=\\\"2\\\">\\n              <ion-button (click)=\\\"getUserRole( user )\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"sync-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"danger\\\" (click)=\\\"onDeleteUser( user.id )\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row> <!-- Fin de la fila a repetir-->\\n        </ion-grid>\\n      </ion-col> <!-- Fin de la columna de 8-->\\n      <ion-col size=\\\"4\\\"> <!-- Columna del formulario-->\\n        <form (ngSubmit)=\\\"onUpdateRole()\\\" [formGroup]=\\\"form\\\" >\\n          <ion-item>\\n            <ion-label>Puesto:</ion-label>\\n            <ion-select placeholder=\\\"Seleccione uno\\\" interface=\\\"popover\\\" formControlName=\\\"role\\\">\\n                <ion-select-option [value]=\\\"rol.name\\\" *ngFor=\\\"let rol of roles\\\">\\n                  {{ rol.name }}\\n                </ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n\\n          <div class=\\\"buttons\\\">\\n            <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" type=\\\"button\\\" color=\\\"danger\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n              Cancelar\\n            </ion-button>\\n\\n            <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" (click)=\\\"onUpdateRole()\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n              Actualizar\\n            </ion-button>\\n\\n            <!-- <ion-button class=\\\"ion-margin-top\\\" fill=\\\"outline\\\" type=\\\"submit\\\" *ngIf=\\\" !isUpdating \\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n              Guardar\\n            </ion-button> -->\\n\\n          </div>\\n        </form>\\n      </ion-col> <!-- Fin de la columna del formulario-->\\n    </ion-row> <!-- Fin de la fila principal -->\\n  </ion-grid>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPageRoutingModule } from './users-routing.module';\n\nimport { UsersPage } from './users.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    UsersPageRoutingModule\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2Vycy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../../auth/interface/user-interface';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  roles = [\n    {\n      name: 'Administrador'\n    },\n    {\n      name: 'Gerente'\n    },\n    {\n      name: 'Empleado'\n    }\n  ];\n  users: Observable<User[]>;\n  allUsers: User[] = [];\n\n  // Usuario a actualizar\n  updateUser: User;\n\n  constructor(private menu: MenuController,\n              private formBuilder: FormBuilder,\n              private userService: UserService ) {\n    this.users = this.userService.getAllUsers();\n    this.users\n    .subscribe( users => {\n      console.log( users );\n      this.allUsers = users; \n    });\n  }\n\n  form: FormGroup = this.formBuilder.group({\n    role: [ '', [ Validators.required ] ]\n  });\n\n  ngOnInit() {\n    // Evita que el men√∫ se abra arrastrando\n    this.menu.swipeGesture( false, 'first');\n  }\n\n  getUserRole( user: User ): void {\n    this.updateUser = user;\n    this.form.get('role').setValue( user.role );\n  }\n\n  onUpdateRole() {\n    if( this.form.invalid ) {\n      return;\n    }\n\n    this.updateUser.role = this.form.get('role').value;\n    this.userService.updateUser( this.updateUser );\n  }\n\n  onDeleteUser( id:string ) {\n    this.userService.deleteUser( id );\n  }\n\n  onToggleMenu() {\n    this.menu.enable( true, 'first');\n    this.menu.open('first');\n  }\n  \n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersPage } from './users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersPageRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../../auth/interface/user-interface';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  usersCollection: AngularFirestoreCollection;\n  users: Observable<User[]>;\n\n  constructor( private af: AngularFirestore,\n               private afa: AngularFireAuth ) {\n    this.usersCollection = this.af.collection('users');\n    this.users = this.usersCollection.snapshotChanges()\n                    .pipe(\n                      map(\n                        actions => {\n                          return actions.map( a => {\n                            const data = a.payload.doc.data() as User;\n                            data.id = a.payload.doc.id;\n                            return data;\n                          }); // actions / map \n                        } // actions\n                      ) // map \n                    ) // pipe \n  }\n\n\n    // Obtener todos los productos\n    getAllUsers(): Observable<User[]>{\n      try {\n        return this.users;\n      } catch ( err ) {\n        console.log( err );\n      }\n  \n    }\n\n  // Actualizar producto\n  async updateUser( user: User ): Promise<void> {\n    try {\n      const id = user.id;\n      this.af.collection('users').doc( id ).update( user );\n    } catch ( err ) {\n      console.log( err );\n    }\n  }\n\n    // Eliminar producto\n    async deleteUser( id: string ): Promise<void> {\n      try {\n        this.afa.user.subscribe( user => {\n          user.delete();\n        });\n\n        this.afa.signOut();\n        await this.af.collection('users').doc( id ).delete();\n      } catch ( err ) {\n        console.log( err );\n      }\n    }\n}\n"]}