{"version":3,"sources":["webpack:///src/app/auth/pages/register/register.page.scss","webpack:///src/app/auth/pages/register/register.page.ts","webpack:///src/app/auth/pages/register/register.page.html","webpack:///src/app/auth/pages/register/register-routing.module.ts","webpack:///src/app/auth/services/validator.service.ts","webpack:///src/app/auth/pages/register/register.module.ts"],"names":["RegisterPage","formBuilder","menu","alertCtrl","router","authService","validatorService","namePattern","emailPattern","form","group","name","required","minLength","pattern","lastName","email","phone","password","maxLength","password2","validators","camposIguales","enable","errors","get","minlength","maxlength","noIguales","console","log","value","userForm","valid","markAllAsTouched","registerWithEmailPassword","user","userData","emailVerified","role","uid","addUser","campo","invalid","touched","create","header","message","buttons","text","handler","navigate","alert","present","selector","template","routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","ValidatorService","campo1","campo2","formGroup","pass1","pass2","setErrors","providedIn","RegisterPageModule","declarations"],"mappings":"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","file":"auth-pages-register-register-module-es5.js","sourcesContent":["export default \".main {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\nform {\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n\\n.no-border {\\n  --border-style: none;\\n  --color: #3880ff;\\n}\\n\\n.no-border a {\\n  text-decoration: none;\\n}\\n\\n.error {\\n  --border-style: none;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxvQkFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBQ0k7RUFDSSxxQkFBQTtBQUNSOztBQUdBO0VBQ0ksb0JBQUE7RUFDQSxVQUFBO0FBQUoiLCJmaWxlIjoicmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmZvcm0ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5uby1ib3JkZXIge1xuICAgIC0tYm9yZGVyLXN0eWxlOiBub25lO1xuICAgIC0tY29sb3I6ICMzODgwZmY7XG5cbiAgICBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbn1cblxuLmVycm9yIHtcbiAgICAtLWJvcmRlci1zdHlsZTogbm9uZTtcbiAgICBjb2xvcjogcmVkO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MenuController, AlertController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ValidatorService } from '../../services/validator.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  // Patrones\n  namePattern: string = '[a-zA-Z ]{3,50}';\n  emailPattern: string = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\n\n  constructor( private formBuilder: FormBuilder,\n               private menu: MenuController,\n               private alertCtrl: AlertController,\n               private router: Router,\n               private authService: AuthService,\n               private validatorService: ValidatorService ) {\n                this.menu.enable( false, 'first' );\n              }\n\n  form: FormGroup = this.formBuilder.group({\n    name: [ '', [ Validators.required, Validators.minLength( 3 ), Validators.pattern( this.namePattern) ] ],\n    lastName: [ '', [ Validators.required, Validators.minLength( 3 ), Validators.pattern( this.namePattern ) ] ],\n    email: [ '', [ Validators.required, Validators.pattern( this.emailPattern ) ], ],\n    phone: [ '', [ Validators.required, Validators.minLength( 8 ) ] ],\n    password: [ '', [ Validators.required, Validators.minLength( 6 ), Validators.maxLength( 20 ) ] ],\n    password2: [ '', ]\n  },{\n    validators: [ this.validatorService.camposIguales( 'password', 'password2' ) ]\n  });\n\n  // Mensajes de error del nombre.\n  get nameErrorMsg(): string {\n    const errors = this.form.get( 'name' )?.errors;\n    if( errors?.required ) {\n      return 'El nombre es obligatorio.';\n    } else if ( errors?.minlength ) {\n      return 'El nombre debe contener mínimo 3 caracteres.';\n    } else if ( errors?.pattern ) {\n      return 'El nombre no es válido.';\n    }\n    return '';\n  }\n\n  // Mensajes de error del apellido.\n  get lastNameErrorMsg(): string {\n    const errors = this.form.get( 'lastName' )?.errors;\n    if( errors?.required ) {\n      return 'El apellido es obligatorio.';\n    } else if( errors?.minlength ) {\n      return 'El apellido debe contener mínimo 3 caracteres.';\n    } else if( errors?.pattern ) {\n      return 'El apellido no es válido';\n    }\n    return '';\n  }\n\n  // Mensajes de error del correo\n  get emailErrorMsg(): string {\n    const errors = this.form.get( 'email' )?.errors;\n    if( errors?.required ) {\n      return 'El correo es obligatorio.';\n    } else if( errors?.pattern ) {\n      return 'El formato del correo no es válido.'\n    }\n    return '';\n  }\n\n  // Mensajes de error del teléfono\n  get phoneErrorMsg(): string {\n    const errors = this.form.get( 'phone' )?.errors;\n    if ( errors?.required ) {\n      return 'El teléfono es obligatorio';\n    } else if ( errors?.minlength ) {\n      return 'El teléfono debe contener mínimio 8 caracteres.';\n    } // TODO: Patrón.\n    return '';\n  }\n\n  // Mensajes de error de la contraseña\n  get passwordErrorMsg(): string {\n    const errors = this.form.get( 'password' )?.errors;\n    if ( errors?.required ) {\n      return 'La contraseña es obligatoria.';\n    } else if ( errors?.minlength ) {\n      return 'La contraseña debe contener mínimo 6 caracteres.';\n    } else if( errors?.maxlength ) {\n      return 'La contraseña debe contener máximo 20 caracteres.';\n    }\n    return '';\n  }\n\n  // Mensaje de error para confirmar la contraseña\n  get confirmPasswordErrorMsg(): string {\n    const errors = this.form.get( 'password2' )?.errors;\n    if ( errors?.noIguales !== false ) {\n      return 'Las contraseñas no son iguales.';\n    }\n    console.log( errors );\n    return '';\n  }\n\n  ngOnInit() {\n  }\n\n  // Registrar usuario.\n  async onRegister() {\n\n    const { email, password } = this.form.value;\n\n    const userForm = this.form.value;\n    delete userForm.password;\n    delete userForm.password2;\n\n    try {\n      if ( !this.form.valid ) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const user = await this.authService.registerWithEmailPassword( email, password, userForm );\n\n      if ( user ) {\n        // Alerta para verificar correo\n        const userData = {\n          name: this.form.get('name').value,\n          lastName: this.form.get('lastName').value,\n          email: this.form.get('email').value,\n          emailVerified: user.emailVerified,\n          phone: this.form.get('phone').value,\n          role: 'Empleado',\n          uid: user.uid\n        }\n        \n        this.authService.addUser( userData );\n      }\n    } catch ( err ) {\n      console.log(\"🚀 ~ file: register.page.ts ~ line 40 ~ RegisterPage ~ onRegister ~ err\", err);\n    }\n\n  }\n\n  // Mensajes de errores\n  campoNoValido( campo: string ) {\n    return this.form.get( campo )?.invalid\n          && this.form.get( campo )?.touched;\n  }\n\n  // Alerta de verificar correo.\n  async verifyEmailAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Registrado correctamente',\n      message: 'Verifique su correo',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            this.router.navigate( ['/login'] );\n          }\n        }\n      ]\n    });\n  \n    await alert.present();\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">Registrar usuario</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"main\\\">\\n    <form (ngSubmit)=\\\"onRegister()\\\" [formGroup]=\\\"form\\\">\\n\\n      <!-- Campo nombre -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Mensaje de error nombre -->\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'name' ) \\\">\\n        <ion-label>{{ nameErrorMsg }}</ion-label>\\n      </ion-item>\\n\\n      <!-- Campo apellido -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Apellido(s)</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Mensaje de error apellido -->\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'lastName' ) \\\">\\n        <ion-label>{{ lastNameErrorMsg }}</ion-label>\\n      </ion-item>\\n      \\n      <!-- Campo correo -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Correo electrónico</ion-label>\\n        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Mensaje de error correo -->\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'email' ) \\\">\\n        <ion-label>{{ emailErrorMsg }}</ion-label>\\n      </ion-item>\\n\\n      <!-- Campo teléfono -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Teléfono</ion-label>\\n        <ion-input type=\\\"tel\\\" formControlName=\\\"phone\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Mensaje de error correo -->\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'phone' ) \\\">\\n        <ion-label>{{ phoneErrorMsg }}</ion-label>\\n      </ion-item>\\n\\n      <!-- Campo contraseña -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Contraseña</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Mensaje de error password -->\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'password' ) \\\">\\n        <ion-label>{{ passwordErrorMsg }}</ion-label>\\n      </ion-item>\\n\\n      <!-- Campo confirmar contraseña -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Confirmar contraseña</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"password2\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item class=\\\"error\\\" *ngIf=\\\" campoNoValido( 'password2' ) \\\">\\n        <ion-label>{{ confirmPasswordErrorMsg }}</ion-label>\\n      </ion-item>\\n      \\n      \\n      <div>\\n        <ion-item class=\\\"no-border\\\">\\n          <a routerLink=\\\"/login\\\">¿Ya tienes una cuenta, haz clic aqui?</a>\\n        </ion-item>\\n      </div>\\n\\n\\n      <div class=\\\"form-button ion-margin-top\\\">\\n        <ion-button expand=\\\"block\\\" type=\\\"submit\\\">\\n          Registrarse\\n        </ion-button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  constructor() { }\n\n  camposIguales( campo1: string, campo2: string ) {\n    \n    return ( formGroup: AbstractControl ): ValidationErrors | null => {\n\n      const pass1 = formGroup.get( campo1 )?.value;\n      const pass2 = formGroup.get( campo2 )?.value;\n\n      if( pass1 !== pass2 ) {\n        formGroup.get( campo2 )?.setErrors( { noIguales: true });\n        return { noIguales: true }\n      }\n      formGroup.get( campo2 )?.setErrors( null );\n      return null;\n    } \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n"]}